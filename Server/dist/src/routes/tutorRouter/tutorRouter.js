"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tutorRouter = void 0;
const express_1 = __importDefault(require("express"));
const tutorRouter = express_1.default.Router();
exports.tutorRouter = tutorRouter;
const tutorController_1 = require("../../controller/tutorController/tutorController");
const tutorMiddleware_1 = require("../../middleware/tutorMiddleware");
const upload_1 = __importDefault(require("../../multer/upload"));
tutorRouter.get("/", (req, res) => {
    res.json({ status: true });
});
tutorRouter.post("/tutorregister", tutorController_1.tutorRegistration);
tutorRouter.post("/tutorlogin", tutorController_1.tutorLogin);
tutorRouter.get("/firebaseAuthVerify", tutorController_1.tutorGoogleAuthentication);
tutorRouter.post("/tutorotp", tutorController_1.verifyOtp);
tutorRouter.get("/resendotp", tutorController_1.tutorResendOtp);
tutorRouter.get("/otpExpiry", tutorController_1.tutorOtpExpiry);
tutorRouter.post("/tutorforgotpassword", tutorController_1.tutorForgotPassword);
tutorRouter.post("/verifyforgototptutor", tutorController_1.verifyForgotOTP);
tutorRouter.post("/tutornewpassword", tutorController_1.tutorNewPassword);
tutorRouter.post("/edit-profile", tutorMiddleware_1.protect, upload_1.default.single('image'), tutorController_1.editProfile);
tutorRouter.post("/tutorlogout", tutorController_1.tutorLogout);
tutorRouter.post("/addnewcourse", tutorMiddleware_1.protect, upload_1.default.single('image'), tutorController_1.addCourses);
tutorRouter.get("/getallcourse/:id", tutorMiddleware_1.protect, tutorController_1.getAlltutorCourse);
tutorRouter.post("/editcourse/:id", tutorMiddleware_1.protect, upload_1.default.single('image'), tutorController_1.editCourse);
tutorRouter.post("/addlesson", tutorMiddleware_1.protect, upload_1.default.single('video'), tutorController_1.addNewLesson);
tutorRouter.post("/editlesson/:lessonId", tutorMiddleware_1.protect, upload_1.default.single('video'), tutorController_1.editLesson);
tutorRouter.get("/get-category", tutorMiddleware_1.protect, tutorController_1.GetAllCategory);
tutorRouter.get("/enrolled-students/:tutorId", tutorMiddleware_1.protect, tutorController_1.enrolledStudents);
tutorRouter.get("/single-course/:courseId", tutorMiddleware_1.protect, tutorController_1.getSingleCourse);
tutorRouter.get("/user-profile/:studentId", tutorMiddleware_1.protect, tutorController_1.studentProfile);
tutorRouter.post("/add-quiz", tutorMiddleware_1.protect, tutorController_1.postQuiz);
tutorRouter.get("/view-quiz/:courseId/:tutorId", tutorMiddleware_1.protect, tutorController_1.getQuizzesByCourseAndTutor);
tutorRouter.delete("/delete-lesson/:courseId/:lessonId", tutorMiddleware_1.protect, tutorController_1.deleteLesson);
tutorRouter.post("/refresh", tutorController_1.refreshTokenCreation);
